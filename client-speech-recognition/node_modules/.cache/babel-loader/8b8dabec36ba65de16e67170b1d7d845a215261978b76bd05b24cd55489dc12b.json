{"ast":null,"code":"var _jsxFileName = \"/Users/hungthach/Documents/daiichi/webrtc/client/websocket/src/component/TextMessage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextMessage = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [responses, setResponses] = useState([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const connectWebSocket = () => {\n    const ws = new WebSocket(\"ws://your-websocket-url\"); // Replace with your WebSocket URL\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n      setIsConnected(true);\n    };\n    ws.onmessage = event => {\n      setResponses(prevResponses => [...prevResponses, event.data]);\n    };\n    ws.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n      setIsConnected(false);\n    };\n    setSocket(ws);\n  };\n  const disconnectWebSocket = () => {\n    if (socket) {\n      socket.close();\n      setSocket(null);\n    }\n  };\n  const toggleConnection = () => {\n    if (isConnected) {\n      disconnectWebSocket();\n    } else {\n      connectWebSocket();\n    }\n  };\n  const sendMessage = () => {\n    if (socket && message) {\n      socket.send(message);\n      setMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"WebSocket Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleConnection,\n        children: isConnected ? \"Disconnect\" : \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Responses:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: responses.map((response, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: response\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TextMessage, \"zB6eLYKR8USW5UUPhTELBhhWJMw=\");\n_c = TextMessage;\nexport default TextMessage;\nvar _c;\n$RefreshReg$(_c, \"TextMessage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TextMessage","_s","socket","setSocket","useState","message","setMessage","responses","setResponses","isConnected","setIsConnected","connectWebSocket","ws","WebSocket","onopen","console","log","onmessage","event","prevResponses","data","onclose","disconnectWebSocket","close","toggleConnection","sendMessage","send","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","map","response","index","_c","$RefreshReg$"],"sources":["/Users/hungthach/Documents/daiichi/webrtc/client/websocket/src/component/TextMessage.tsx"],"sourcesContent":["import React from \"react\";\n\nconst TextMessage = () => {\n  const [socket, setSocket] = useState<WebSocket | null>(null);\n  const [message, setMessage] = useState(\"\");\n  const [responses, setResponses] = useState<string[]>([]);\n  const [isConnected, setIsConnected] = useState<boolean>(false);\n\n  const connectWebSocket = () => {\n    const ws = new WebSocket(\"ws://your-websocket-url\"); // Replace with your WebSocket URL\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connection opened\");\n      setIsConnected(true);\n    };\n\n    ws.onmessage = (event) => {\n      setResponses((prevResponses) => [...prevResponses, event.data]);\n    };\n\n    ws.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n      setIsConnected(false);\n    };\n\n    setSocket(ws);\n  };\n\n  const disconnectWebSocket = () => {\n    if (socket) {\n      socket.close();\n      setSocket(null);\n    }\n  };\n\n  const toggleConnection = () => {\n    if (isConnected) {\n      disconnectWebSocket();\n    } else {\n      connectWebSocket();\n    }\n  };\n\n  const sendMessage = () => {\n    if (socket && message) {\n      socket.send(message);\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>WebSocket Chat</h2>\n      <div>\n        <button onClick={toggleConnection}>{isConnected ? \"Disconnect\" : \"Connect\"}</button>\n      </div>\n      {isConnected && (\n        <div>\n          <input\n            type=\"text\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type a message\"\n          />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      )}\n      <div>\n        <h3>Responses:</h3>\n        <ul>\n          {responses.map((response, index) => (\n            <li key={index}>{response}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TextMessage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}